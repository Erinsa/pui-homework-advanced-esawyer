{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ErinS\\\\Documents\\\\GitHub\\\\pui-homework-advanced-esawyer\\\\solution-hw6\\\\src\\\\views\\\\home\\\\cart.js\";\n// Used lab activity (notecard) for reference\n\nimport React, { Component } from 'react';\nimport { useState } from \"react\";\nimport CartRoll from './cartroll.js';\n// import './cartroll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    // This function handles removing rolls from the cart via the remove button on the cart roll cards, and updating associated values\n    this.removeButtonHandler = rollIndex => {\n      const newCartRollData = this.state.cartRollData;\n      // let newCartRollData = JSON.parse(localStorage.getItem(\"cartrollData\"))\n      // let newTotalPrice = this.state.totalPrice;\n      // newTotalPrice = (parseFloat(newTotalPrice) - parseFloat(newCartRollData[rollIndex].roll_price)).toFixed(2)\n\n      newCartRollData.splice(rollIndex, 1);\n\n      // let item_count = newCartRollData.length;\n      // let itemText = \"\";\n      // if (item_count == 1) {\n      //   itemText = \" item\";\n      // } else {\n      //   itemText = \" items\";\n      // }\n\n      // console.log(\"cart remove\", newCartRollData)\n      // localStorage.setItem(\"cartrollData\", JSON.stringify(newCartRollData));\n\n      this.setState(prevState => ({\n        ...prevState,\n        // totalPrice: newTotalPrice,\n        // totalItems: item_count,\n        // totalItemsText: itemText,\n        cartRollData: newCartRollData\n      }));\n    };\n    this.state = {\n      // cartrollData: JSON.parse(localStorage.getItem(\"cartrollData\")) || []\n      cartRollData: JSON.parse(localStorage.getItem(\"cartRollData\")) || []\n    };\n  }\n  componentDidMount() {\n    console.log(\"hello\", this.state.cartRollData);\n    localStorage.setItem(\"cartRollData\", JSON.stringify(this.state.cartRollData));\n  }\n  componentDidUpdate() {\n    // localStorage.setItem(\"cartRollData\", JSON.stringify(this.state.cartRollData));\n    // console.log(\"cart\", this.state.cartrollData)\n    // if \n    console.log(\"cart new\", JSON.parse(localStorage.getItem(\"cartRollData\")));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overall_cart_holder\",\n      children: [this.state.cartRollData.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart_empty_text\",\n        children: \"The cart is empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), this.state.cartRollData.length >= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart_shown_holder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart_shown_price_items_text_holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-items-text-shown\",\n            children: `Shopping Cart (` + `${this.state.cartRollData.length}` + `${this.state.cartRollData.length == 1 ? \" item\" : \" items\"}` + `)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-total-text-shown\",\n            children: \"Total: \" + `${this.state.cartRollData.reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), this.state.cartRollData.map((cartroll, idx) => {\n          return /*#__PURE__*/_jsxDEV(CartRoll, {\n            rollIndex: idx,\n            roll_img_src: cartroll.roll_img_src,\n            roll_img_alt: cartroll.roll_img_alt,\n            roll_figcaption: cartroll.roll_figcaption,\n            roll_base_price: cartroll.roll_base_price,\n            roll_type: cartroll.roll_type,\n            roll_glazing: cartroll.roll_glazing,\n            roll_pack_size: cartroll.roll_pack_size,\n            roll_price: this.props.priceCalculator(cartroll.roll_base_price, cartroll.roll_glazing, cartroll.roll_pack_size)\n            // onRemove = {this.props.onRemove}\n            ,\n            onRemove: this.removeButtonHandler\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n\n    //   <div className = \"overall_cart_holder\">\n    //   {console.log(\"cart roll check\", JSON.parse(localStorage.getItem(\"cartrollData\")))}\n\n    // //   {(this.state.cartrollData.length == 0) &&\n    //             <div className = \"cart_empty_text\">The cart is empty!</div>\n    //           }\n\n    //   {(this.state.cartrollData.length >= 1) &&\n\n    //     <div className = \"cart_shown_holder\">\n\n    //       <div className = \"cart_shown_price_items_text_holder\">\n\n    //         <div className = \"cart-items-text-shown\">\n    //           {/* {`Shopping Cart (`+`${this.state.totalItems}`+ `${this.state.totalItemsText}`+`)`} */}\n    //           {/* {console.log(\"cart roll check\", JSON.parse(localStorage.getItem(\"cartrollData\")))}\n    //           {`Shopping Cart (`+`${JSON.parse(localStorage.getItem(\"cartrollData\")).length}`+ `${JSON.parse(localStorage.getItem(\"cartrollData\")).length == 1 ? \" item\" : \" items\"}`+`)`} */}\n    //           {`Shopping Cart (`+`${this.state.cartrollData.length}`+ `${this.state.cartrollData.length == 1 ? \" item\" : \" items\"}`+`)`}\n    //           {/* \"Work\" ? \"blue\" : \"green\" */}\n    //         </div>\n\n    //         <div className = \"cart-total-text-shown\">\n    //           {/* {\"Total: \"+ `${JSON.parse(localStorage.getItem(\"cartrollData\")).reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`} */}\n    //           {\"Total: \"+ `${this.state.cartrollData.reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`}\n    //           {/* {\"Total: \"+ `${this.state.cartrollData.reduce((sum, num) => console.log(\"num\", num) )}`} */}\n    //         </div>\n\n    //     </div>\n\n    //     <div className = \"cartcard-list\"> \n\n    //     {/* {console.log(\"cart roll check\", cartrollData)} */}\n\n    //     {this.state.cartrollData.map((cartroll, idx) => {\n    //       return <CartRoll\n    //         key={idx}\n    //         rollIndex={idx}\n    //         roll_img_src={cartroll.roll_img_src}\n    //         roll_img_alt={cartroll.roll_img_alt}\n    //         roll_figcaption={cartroll.roll_figcaption}\n    //         roll_base_price={cartroll.roll_base_price}\n    //         roll_type={cartroll.roll_type}\n    //         roll_glazing={cartroll.roll_glazing}\n    //         roll_pack_size={cartroll.roll_pack_size}\n    //         roll_price= {this.props.priceCalculator(cartroll.roll_base_price, cartroll.roll_glazing, cartroll.roll_pack_size)}\n    //         onRemove = {this.props.onRemove}\n    //         // onRemove = {this.removeButtonHandler}\n\n    //       />;\n    //     })}\n    //   </div>\n    // </div>}\n    // </div>\n    ;\n  }\n}\n\nexport default Cart;","map":{"version":3,"names":["React","Component","useState","CartRoll","jsxDEV","_jsxDEV","Cart","constructor","props","removeButtonHandler","rollIndex","newCartRollData","state","cartRollData","splice","setState","prevState","JSON","parse","localStorage","getItem","componentDidMount","console","log","setItem","stringify","componentDidUpdate","render","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","reduce","sum","num","parseFloat","roll_price","toFixed","map","cartroll","idx","roll_img_src","roll_img_alt","roll_figcaption","roll_base_price","roll_type","roll_glazing","roll_pack_size","priceCalculator","onRemove"],"sources":["C:/Users/ErinS/Documents/GitHub/pui-homework-advanced-esawyer/solution-hw6/src/views/home/cart.js"],"sourcesContent":["// Used lab activity (notecard) for reference\r\n\r\nimport React, { Component } from 'react';\r\nimport { useState } from \"react\";\r\nimport CartRoll from './cartroll.js';\r\n// import './cartroll.css';\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        // cartrollData: JSON.parse(localStorage.getItem(\"cartrollData\")) || []\r\n        cartRollData: JSON.parse(localStorage.getItem(\"cartRollData\")) || [],\r\n    };   \r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"hello\", this.state.cartRollData);\r\n    localStorage.setItem(\"cartRollData\", JSON.stringify(this.state.cartRollData));\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    // localStorage.setItem(\"cartRollData\", JSON.stringify(this.state.cartRollData));\r\n    // console.log(\"cart\", this.state.cartrollData)\r\n    // if \r\n    console.log(\"cart new\", JSON.parse(localStorage.getItem(\"cartRollData\")))\r\n  };\r\n\r\n      // This function handles removing rolls from the cart via the remove button on the cart roll cards, and updating associated values\r\n      removeButtonHandler = (rollIndex) => {\r\n        const newCartRollData = this.state.cartRollData;\r\n        // let newCartRollData = JSON.parse(localStorage.getItem(\"cartrollData\"))\r\n        // let newTotalPrice = this.state.totalPrice;\r\n        // newTotalPrice = (parseFloat(newTotalPrice) - parseFloat(newCartRollData[rollIndex].roll_price)).toFixed(2)\r\n    \r\n        newCartRollData.splice(rollIndex, 1);\r\n    \r\n        // let item_count = newCartRollData.length;\r\n        // let itemText = \"\";\r\n        // if (item_count == 1) {\r\n        //   itemText = \" item\";\r\n        // } else {\r\n        //   itemText = \" items\";\r\n        // }\r\n    \r\n        // console.log(\"cart remove\", newCartRollData)\r\n        // localStorage.setItem(\"cartrollData\", JSON.stringify(newCartRollData));\r\n    \r\n        this.setState(prevState => ({\r\n          ...prevState,\r\n          // totalPrice: newTotalPrice,\r\n          // totalItems: item_count,\r\n          // totalItemsText: itemText,\r\n          cartRollData: newCartRollData\r\n        }))\r\n      };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className = \"overall_cart_holder\">\r\n      \r\n        {(this.state.cartRollData.length == 0) &&\r\n          <div className = \"cart_empty_text\">The cart is empty!</div>\r\n        }\r\n\r\n        {(this.state.cartRollData.length >= 1) &&\r\n          <div className = \"cart_shown_holder\">\r\n\r\n            <div className = \"cart_shown_price_items_text_holder\">\r\n\r\n              <div className = \"cart-items-text-shown\">\r\n                {`Shopping Cart (`+`${this.state.cartRollData.length}`+ `${this.state.cartRollData.length == 1 ? \" item\" : \" items\"}`+`)`}\r\n              </div>\r\n\r\n              <div className = \"cart-total-text-shown\">\r\n                {\"Total: \"+ `${this.state.cartRollData.reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            {this.state.cartRollData.map((cartroll, idx) => {\r\n                return <CartRoll\r\n                  key={idx}\r\n                  rollIndex={idx}\r\n                  roll_img_src={cartroll.roll_img_src}\r\n                  roll_img_alt={cartroll.roll_img_alt}\r\n                  roll_figcaption={cartroll.roll_figcaption}\r\n                  roll_base_price={cartroll.roll_base_price}\r\n                  roll_type={cartroll.roll_type}\r\n                  roll_glazing={cartroll.roll_glazing}\r\n                  roll_pack_size={cartroll.roll_pack_size}\r\n                  roll_price= {this.props.priceCalculator(cartroll.roll_base_price, cartroll.roll_glazing, cartroll.roll_pack_size)}\r\n                  // onRemove = {this.props.onRemove}\r\n                  onRemove = {this.removeButtonHandler}\r\n                />;\r\n              })}\r\n              </div>\r\n        }\r\n\r\n      </div>\r\n\r\n    //   <div className = \"overall_cart_holder\">\r\n    //   {console.log(\"cart roll check\", JSON.parse(localStorage.getItem(\"cartrollData\")))}\r\n      \r\n    // //   {(this.state.cartrollData.length == 0) &&\r\n    //             <div className = \"cart_empty_text\">The cart is empty!</div>\r\n    //           }\r\n\r\n    //   {(this.state.cartrollData.length >= 1) &&\r\n\r\n    //     <div className = \"cart_shown_holder\">\r\n\r\n\r\n    //       <div className = \"cart_shown_price_items_text_holder\">\r\n\r\n    //         <div className = \"cart-items-text-shown\">\r\n    //           {/* {`Shopping Cart (`+`${this.state.totalItems}`+ `${this.state.totalItemsText}`+`)`} */}\r\n    //           {/* {console.log(\"cart roll check\", JSON.parse(localStorage.getItem(\"cartrollData\")))}\r\n    //           {`Shopping Cart (`+`${JSON.parse(localStorage.getItem(\"cartrollData\")).length}`+ `${JSON.parse(localStorage.getItem(\"cartrollData\")).length == 1 ? \" item\" : \" items\"}`+`)`} */}\r\n    //           {`Shopping Cart (`+`${this.state.cartrollData.length}`+ `${this.state.cartrollData.length == 1 ? \" item\" : \" items\"}`+`)`}\r\n    //           {/* \"Work\" ? \"blue\" : \"green\" */}\r\n    //         </div>\r\n\r\n    //         <div className = \"cart-total-text-shown\">\r\n    //           {/* {\"Total: \"+ `${JSON.parse(localStorage.getItem(\"cartrollData\")).reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`} */}\r\n    //           {\"Total: \"+ `${this.state.cartrollData.reduce((sum, num) => parseFloat(sum) + parseFloat(num.roll_price), 0).toFixed(2)}`}\r\n    //           {/* {\"Total: \"+ `${this.state.cartrollData.reduce((sum, num) => console.log(\"num\", num) )}`} */}\r\n    //         </div>\r\n\r\n    //     </div>\r\n\r\n    //     <div className = \"cartcard-list\"> \r\n\r\n    //     {/* {console.log(\"cart roll check\", cartrollData)} */}\r\n\r\n    //     {this.state.cartrollData.map((cartroll, idx) => {\r\n    //       return <CartRoll\r\n    //         key={idx}\r\n    //         rollIndex={idx}\r\n    //         roll_img_src={cartroll.roll_img_src}\r\n    //         roll_img_alt={cartroll.roll_img_alt}\r\n    //         roll_figcaption={cartroll.roll_figcaption}\r\n    //         roll_base_price={cartroll.roll_base_price}\r\n    //         roll_type={cartroll.roll_type}\r\n    //         roll_glazing={cartroll.roll_glazing}\r\n    //         roll_pack_size={cartroll.roll_pack_size}\r\n    //         roll_price= {this.props.priceCalculator(cartroll.roll_base_price, cartroll.roll_glazing, cartroll.roll_pack_size)}\r\n    //         onRemove = {this.props.onRemove}\r\n    //         // onRemove = {this.removeButtonHandler}\r\n\r\n    //       />;\r\n    //     })}\r\n    //   </div>\r\n    // </div>}\r\n    // </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Generally used the following order within styling throughout
width
height
display
position
flex
direction
wrap
justify-content
align-content
align-items
column-gap
font-family
font-size
font-weight
padding
border
margin
color
background-color
opacity
cursor
anything else */

/* Got this from css lecture */
* {
  box-sizing: border-box;
}

/* Referenced css lecture */
body {
  font-family: sans-serif;
  font-size: 14px;
  margin: 50px;
  color: black;
}

/* for flex boxes and alignment throughout I used the following references
I'm not citing specific examples because I combined learnings from many of them 
and built upon that learning as I progressed through the assignment. 
I didn't necessarily used specific code chunks for a specific section */
/* https://www.w3schools.com/css/css3_flexbox.asp
https://css-tricks.com/guides/
https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox#nested_flex_boxes
https://stackoverflow.com/questions/69852513/100-total-width-for-flex-items-in-flex-container-with-gap-inbetween
https://stackoverflow.com/questions/38896055/how-to-center-align-a-flexbox-container  */
/* header class includes logo, and header right which has nav, line, and slogan - also a flex parent */
.header {
  width: 100%;
  display: flex;
  flex-direction: row;
}

/* logo image for header */
.logo {
  width: 400px;
  display: flex;
  padding-right: 30px;
}

/* flex container that is also a flex parent, contains nav, line, slogan */
.header-right {
  display: flex;
  /* This reference (from above) also helped me with understanding calc()and wrap
  https://stackoverflow.com/questions/69852513/100-total-width-for-flex-items-in-flex-container-with-gap-inbetween*/
  flex: 1 0 calc(100% - 400px - 30px);
  flex-wrap: wrap;
}

/* References for styling a horizontal line:
https://www.w3schools.com/howto/howto_css_style_hr.asp
https://stackoverflow.com/questions/42986500/how-to-display-hr-horizontally-with-flex */
.horizontal_line {
  height: 5px;
  flex: 1 0 107%;
  color:black;
  background-color: black;
}

/* flex child containing slogan */
.slogan_box {
  display: flex;
  align-items: flex-end;
  font-size: 24pt;
}

/* holds products and cart nav options as flex children */
.header-nav{
  width:100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  column-gap: 50px;
  font-size: 20pt;
  margin-right: 75px;
}

.product_link {
  color: black;
  text-decoration: none;
}

/* Used this as reference for hover:
https://www.w3schools.com/cssref/sel_hover.php */
/* makes product yellow when you hover over it */
.product:hover {
  font-weight: bold;
  background-color: yellow;
}

/* This reference (from above) also helped me with understanding flex boxes using sections and articles
  https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox#nested_flex_boxes */
/* flex parent, contains first row of product cards (first 3) */
/* .section {
  width: calc(100% - 100px);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
  padding: 75px 75px 0px;
  background-color: aqua;
} */

.section {
  width: 100%;
  /* width: calc(100% - 100px); */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /* padding: 75px 75px 0px; */
  background-color: aqua;
}

#notecard-list {
  width: calc(100% - 100px);
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
  padding: 75px 0px 0px;
  background-color: yellowgreen;
}

/* the basis of the product cards - section is its flex parent and it is also a flex container */
article {
  width:275px;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  align-content: center;
  background-color: brown;
  text-align: left;
}

/* figure (flex container and flex child) containing image and caption */
figure {
  margin:20px 0px 15px 0px;
}

/* Used for reference for help adding a border to image:
https://www.w3schools.com/howto/howto_css_border_image.asp */
/* product image - set border here also */
.product_image{
  width: 275px;
  border: 3px solid black;
}

/* Used for reference for figure and figcaption: 
https://www.w3schools.com/tags/tag_figcaption.asp */
/* used for product name as a part of the figure */
figcaption {
  font-size: 17pt;
  font-weight: 600;
  padding-top: 5px;
}

/* Used the following reference for ideas on structuring the buttons/options and labels.
Thinking about it like outer, rows, and items really helped me.
https://stackoverflow.com/questions/55738082/how-to-make-a-flexible-2x3-grid-using-flexbox */
/* the outer flex container for our options/buttons and labels */
.outer{
  display: flex;
  flex-direction: column;
  font-size: 14pt;
}

/* this row flex container helped organize the buttons and labels into grid */
.row {
  display: flex;
  flex: 1;
  align-items: baseline;
}

/* button and/or label flex child */
.item {
  flex: 1;
  align-items: baseline;
}

/* styling for just label text */
.item.text{
  height: 10px;
  flex: 0 0 35%;
}

/* styling specifically for price label (bigger and bolder on mockup) */
.price_text{
  font-size: 16pt;
  font-weight: bold;
}

/* styling for option item */
.option{
  justify-content: center;
}

/* Used this reference for help styling dropdowns: 
https://www.geeksforgeeks.org/how-to-style-a-dropdown-using-css/ */
/* styling for dropdown for glazing */
.glaze_select {
  width: calc(100% - 20px);
  flex: 1 0 100%;
  font-size: 14pt;
  padding-top: 5px;
  padding-bottom: 5px;
  border: 2px solid black;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 20px;
  /* Learned this cursor thing from a later reference about custom radio buttons*/
  cursor: pointer;
}

/* Used a combination of the following references for custom radio buttons:
https://www.w3schools.com/howto/howto_css_custom_checkbox.asp
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio
https://moderncss.dev/pure-css-custom-styled-radio-buttons/ */
/* start styling for custom radio buttons */
.quantity_button_container {
  width: calc(100% - 15px);
  display: flex;
  flex: 1 0 auto;
  justify-content: space-between;
  margin-left: 15px;
}

.quantity_button {
  flex: 1 0 auto;
  font-size: 14pt;
  padding-top: 5px;
  padding-bottom: 5px;
  margin-left: 5px;
  background-color: white;
}

.quantity_buttons {
  display: block;
  position: relative;
  font-size: 14pt;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.quantity_buttons input {
  width: 0;
  height: 0;
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.new_quantity_button {
  flex: 1 0 auto;
  font-size: 14pt;
  padding: 5px 10px 5px 9px;
  border: 2px solid black;
  margin-left: 5px;
  background-color: white;
}

.quantity_buttons input:checked ~ .new_quantity_button {
  background-color: lightgray;
}
/* end styling for custom radio buttons */

/* styling for add to cart button */
.cart_button {
  width: calc(100% - 20px);
  justify-content: space-between;
  font-size: 16pt;
  font-weight: bold;
  padding-top: 5px;
  padding-bottom: 5px;
  margin-left: 20px;
  background-color: white;
  cursor: pointer;
}

/* hover functionality for add to cart button */
.cart_button:hover {
  background-color: yellow;
}






